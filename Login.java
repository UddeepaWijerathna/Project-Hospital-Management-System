
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalmanagementsystem;

import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author Uddeepa Wijerathna
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ADVANCED HOSPITAL MANAGEMENT SYSTEM");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 430, 60));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 102));
        jLabel2.setText("USER TYPE");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 100, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 102));
        jLabel3.setText("USER NAME");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 70, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 102));
        jLabel4.setText("PASSWORD");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 80, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 102));
        jButton1.setText("LOGIN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 280, 80, 40));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 102));
        jButton2.setText("RESET");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 280, 90, 40));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(0, 0, 102));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ADMIN", "DOCTOR", "RECEPTIONIST", "FINANCE STAFF", "LAB ASSISTANT" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, 130, 30));
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 130, 30));
        jPanel1.add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 200, 130, 30));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/s.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 410));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       //Reset user name and password to null
        jTextField1.setText("");
        jPasswordField1.setText("");
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //if the user_name and Paasword are null values, error message is shown
        String p= String.valueOf(jPasswordField1.getPassword());
        if((jTextField1.getText().equals(""))||(p.equals("")))
            {
                JOptionPane.showMessageDialog(this, "Input UserName and Password","Error",JOptionPane.ERROR_MESSAGE);
           
            }
            else
            {
       
        try
        {
        //Connect to the database
        Statement s=Database.getStatement();
        //If the user type is ADMIN 
        if(jComboBox1.getSelectedItem()=="ADMIN")
        {

            String query ="SELECT User_Name,Password from admin";
            ResultSet rs =s.executeQuery(query);
            //assigning the entered username and password values to two string variables
            String uname=jTextField1.getText();
            //String pword=jPasswordField1.getText();
            int k=0;
            while(rs.next())
            {
                //assigning the values of username and password in the admin table of database to two string variables
                String duname=rs.getString(1);
                String dpword=rs.getString(2);
                //checking whether the entered user name is equal to the user name in the database
                if(uname.equals(duname))
                {
                    k++;
                    //checking whether  entered password is equal to the password in the database with corresponing to the username entered before.
                    if(p.equals(dpword))
                    {
                        JOptionPane.showMessageDialog(this, "Login Successful", "Success",JOptionPane.INFORMATION_MESSAGE);
                        Admin ad=new Admin(this);
                        ad.setVisible(true);
                        jTextField1.setText("");
                        jPasswordField1.setText("");
                        this.dispose();
                        
                    }
                    //if the password is incorrect, an error message is shown
                    else
                    {
                        JOptionPane.showMessageDialog(this, "Password Incorrect", "Error", JOptionPane.ERROR_MESSAGE);
                        
                    }
                }
            }
                //if the User name or user type is incorrect, an error message is shown
                if(k==0) 
                {
                    JOptionPane.showMessageDialog(this, " Incorrect User Name or User Type ", "Error", JOptionPane.ERROR_MESSAGE);
                    
                }
            
            
        }
        //if the User type is DOCTOR
        else if(jComboBox1.getSelectedItem()=="DOCTOR")
        {
            String uname=jTextField1.getText();
            //String pword=jPasswordField1.getText();
            String query ="SELECT User_Name,Password from doctorregistration";
            ResultSet rs =s.executeQuery(query);

            int k=0;
            while(rs.next())
            {
                String duname=rs.getString(1);
                //System.out.println(duname);
                String dpword=rs.getString(2);
                //System.out.println(dpword);
            //checking whether the entered user name is equal to the user name in the database
                if(uname.equals(duname))
                {
                    k++;
                 //checking whether  entered password is equal to the password in the database with corresponing to the username entered before.   
                    if(p.equals(dpword))
                    {
                        JOptionPane.showMessageDialog(this, "Login Successful", "Success",JOptionPane.INFORMATION_MESSAGE);
                        Doctor ad=new Doctor(this);
                        ad.setVisible(true);
                        jTextField1.setText("");
                        jPasswordField1.setText("");
                        this.hide();
                        
                    }
                     //if the password is incorrect, an error message is shown
                    else
                    {
                        JOptionPane.showMessageDialog(this, "Password Incorrect", "Error", JOptionPane.ERROR_MESSAGE);
                        
                    }
                }
            }
                //if the user name or user type is incorrecct , an error message is shown
                if(k==0)
                {
                    JOptionPane.showMessageDialog(this, "Incorrect User Name or User Type", "Error", JOptionPane.ERROR_MESSAGE);
                    
                }
            
        }
       //if the user type is RECEPTIONIST
        else if(jComboBox1.getSelectedItem()=="RECEPTIONIST")
        {
            String query ="SELECT User_Name,Password from receptionistregistration";
            ResultSet rs =s.executeQuery(query);
            String uname=jTextField1.getText();
            String pword=jPasswordField1.getText();
            int k=0;
            while(rs.next())
            {
                String duname=rs.getString(1);
                String dpword=rs.getString(2);
            //checking whether the entered user name is equal to the user name in the database
                if(uname.equals(duname))
                {
                    k++;
                 //checking whether  entered password is equal to the password in the database with corresponing to the username entered before.   
                    if(pword.equals(dpword))
                    {
                        JOptionPane.showMessageDialog(this, "Login Successful", "Success",JOptionPane.INFORMATION_MESSAGE);
                        Receptionist ad=new Receptionist(this);
                        ad.setVisible(true);
                        jTextField1.setText("");
                        jPasswordField1.setText("");
                        this.dispose();
                        
                    }
                    // if the password is wrong, an error message is shown
                    else
                    {
                        JOptionPane.showMessageDialog(this, "Password Incorrect", "Error", JOptionPane.ERROR_MESSAGE);
                        
                    }
                }
            }
                //if the user name or user type is wrong, an error message is shown.
                if(k==0)
                {
                    JOptionPane.showMessageDialog(this, " Incorrect User Name or User Type", "Error", JOptionPane.ERROR_MESSAGE);
                    
                }
            
        }
        // if the user type is LAB ASSISTANT
        else if(jComboBox1.getSelectedItem()=="LAB ASSISTANT")
        {
            int k=0;
            String query ="SELECT User_Name,Password from labassistantregistration";
            ResultSet rs =s.executeQuery(query);
            String uname=jTextField1.getText();
            String pword=jPasswordField1.getText();
            
            while(rs.next())
            {
                k++;
                String duname=rs.getString(1);
                String dpword=rs.getString(2);
            //checking whether the entered user name is equal to the user name in the database
                if(uname.equals(duname))
                {
                 //checking whether  entered password is equal to the password in the database with corresponing to the username entered before.   
                    if(pword.equals(dpword))
                    {
                        JOptionPane.showMessageDialog(this, "Login Successful", "Success",JOptionPane.INFORMATION_MESSAGE);
                        LabAssistant ad=new LabAssistant(this);
                        ad.setVisible(true);
                        jTextField1.setText("");
                        jPasswordField1.setText("");
                        this.dispose();
                        
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(this, "Password Incorrect", "Error", JOptionPane.ERROR_MESSAGE);
                        
                    }
                }
            }
                if(k==0)
                {
                    JOptionPane.showMessageDialog(this, " Incorrect User Name or User Type", "Error", JOptionPane.ERROR_MESSAGE);
                    
                }
            
        }
        //if the user type is FINANCE STAFF
        else if(jComboBox1.getSelectedItem()=="FINANCE STAFF")
        {
            int k=0;
            String query ="SELECT User_Name,Password from financestaffregistration";
            ResultSet rs =s.executeQuery(query);
            String uname=jTextField1.getText();
            String pword=jPasswordField1.getText();
            
            while(rs.next())
            {
                k++;
                String duname=rs.getString(1);
                String dpword=rs.getString(2);
            //checking whether the entered user name is equal to the user name in the database
                if(uname.equals(duname))
                {
                    
                    if(pword.equals(dpword))
                    {
                        JOptionPane.showMessageDialog(this, "Login Successful", "Success",JOptionPane.INFORMATION_MESSAGE);
                        FinanceStaff ad=new FinanceStaff(this);
                        ad.setVisible(true);
                        jTextField1.setText("");
                        jPasswordField1.setText("");
                        this.dispose();
                        
                    }
                     //if the password is incorrect, an error message is shown
                    else
                    {
                        JOptionPane.showMessageDialog(this, "Password Incorrect", "Error", JOptionPane.ERROR_MESSAGE);
                        
                    }
                }
            }
                //if the user name or user type is wrong , an error message is shown.
                if(k==0)
                {
                    JOptionPane.showMessageDialog(this, "Incorrect User Name or User Type", "Error", JOptionPane.ERROR_MESSAGE);
                    
                }
            }
        

        
        
        }
        catch(Exception e)
        {
        
        }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

        
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
